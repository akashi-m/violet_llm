import torch
import soundfile as sf
import subprocess
import tempfile
import os
import ssl
from omegaconf import OmegaConf

class TTSPlayer:
    def __init__(self, speaker="kseniya", sample_rate=48000, put_accent=True, put_yo=True):
        # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL (—Ñ–∏–∫—Å–∏–º –æ—à–∏–±–∫—É)
        ssl._create_default_https_context = ssl._create_unverified_context

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –º–æ–¥–µ–ª–∏
        torch.hub.download_url_to_file('https://raw.githubusercontent.com/snakers4/silero-models/master/models.yml',
                                       'latest_silero_models.yml',
                                       progress=False)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏
        models = OmegaConf.load('latest_silero_models.yml')

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (CUDA –∏–ª–∏ CPU)
        self.device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º Silero TTS
        self.model, _ = torch.hub.load(repo_or_dir="snakers4/silero-models",
                                       model="silero_tts",
                                       language="ru",
                                       speaker="v3_1_ru")
        self.model.to(self.device)

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
        self.speaker = speaker
        self.sample_rate = sample_rate
        self.put_accent = put_accent
        self.put_yo = put_yo

    def say(self, text):
        """–û–∑–≤—É—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –µ–≥–æ."""
        audio = self.model.apply_tts(text=text, speaker=self.speaker,
                                     sample_rate=self.sample_rate,
                                     put_accent=self.put_accent, put_yo=self.put_yo)

        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π WAV-—Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as tmpfile:
            filename = tmpfile.name
            sf.write(filename, audio, self.sample_rate)

        # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ
        if os.name == "posix":
            subprocess.run(f"afplay {filename}", shell=True)  # macOS
            # subprocess.run(f"aplay {filename}", shell=True)  # Linux
        else:
            subprocess.run(f"start {filename}", shell=True)  # Windows

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(filename)

# üî• –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
tts = TTSPlayer()
tts.say("–¢–µ–ø–µ—Ä—å –∑–≤—É–∫ –¥–æ–ª–∂–µ–Ω –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –ë–µ–∑ –∏—Å–∫–∞–∂–µ–Ω–∏–π –∏ –Ω–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏.")
